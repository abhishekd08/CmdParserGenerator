grammar LineageCommand;



prule: CHAR_A|CHAR_a;


//Hive Command Options
hive_command_options
:
(
(
    (SPL_CHAR_HYPHEN ('d' | (SPL_CHAR_HYPHEN STRING_define)) SPL_CHAR_SPACE+ (CHAR_RANGE_UPPER|CHAR_RANGE_LOWER|NUMBER_RANGE|SPL_CHAR_UNDERSCORE)+)
|   (SPL_CHAR_HYPHEN CHAR_e SPL_CHAR_SPACE+ SPL_CHAR_SINGLE_QUOTE (CHAR_RANGE_UPPER|CHAR_RANGE_LOWER|NUMBER_RANGE|SPL_CHAR_UNDERSCORE)+ SPL_CHAR_SINGLE_QUOTE)
|   (SPL_CHAR_HYPHEN CHAR_f SPL_CHAR_SPACE+ (CHAR_RANGE_UPPER|CHAR_RANGE_LOWER|NUMBER_RANGE|SPL_CHAR_UNDERSCORE)+)
|   (SPL_CHAR_HYPHEN CHAR_H)
|   (SPL_CHAR_HYPHEN CHAR_h SPL_CHAR_SPACE+ (CHAR_RANGE_UPPER|CHAR_RANGE_LOWER|NUMBER_RANGE|SPL_CHAR_UNDERSCORE)+)
|   (SPL_CHAR_HYPHEN STRING_hiveconf SPL_CHAR_SPACE+ (CHAR_RANGE_UPPER|CHAR_RANGE_LOWER|NUMBER_RANGE|SPL_CHAR_UNDERSCORE)+)
|   (SPL_CHAR_HYPHEN STRING_hivevar SPL_CHAR_SPACE+ (CHAR_RANGE_UPPER|CHAR_RANGE_LOWER|NUMBER_RANGE|SPL_CHAR_UNDERSCORE)+)
|   (SPL_CHAR_HYPHEN CHAR_i SPL_CHAR_SPACE+ (CHAR_RANGE_UPPER|CHAR_RANGE_LOWER|NUMBER_RANGE|SPL_CHAR_UNDERSCORE)+)
|   (SPL_CHAR_HYPHEN CHAR_p SPL_CHAR_SPACE+ (CHAR_RANGE_UPPER|CHAR_RANGE_LOWER|NUMBER_RANGE|SPL_CHAR_UNDERSCORE)+)
|   (SPL_CHAR_HYPHEN (CHAR_S | SPL_CHAR_HYPHEN STRING_silent))
|   (SPL_CHAR_HYPHEN (CHAR_V | SPL_CHAR_HYPHEN STRING_verbose))
)
SPL_CHAR_SPACE*
)
EOF
;


//WORD: (CHAR_RANGE_UPPER|CHAR_RANGE_LOWER|NUMBER_RANGE|SPL_CHAR_UNDERSCORE);


STRING_silent: 'silent';
STRING_verbose: 'verbose';
STRING_define: 'define';
STRING_help: 'help';
STRING_hiveconf: 'hiveconf';
STRING_hivevar: 'hivevar';

CHAR_e: 'e';
CHAR_f: 'f';
CHAR_H: 'H';
CHAR_h: 'h';
CHAR_i: 'i';
CHAR_p: 'p';
//CHAR_d: 'd';
CHAR_S: 'S';
CHAR_V: 'V';

SPL_CHAR_SPACE: ' ';
SPL_CHAR_EQUALS: '=';
SPL_CHAR_UNDERSCORE: '_';
SPL_CHAR_SINGLE_QUOTE: '\'';
SPL_CHAR_DOUBLE_QUOTE: '"';
SPL_CHAR_HYPHEN: '-';

CHAR_RANGE_LOWER: 'a'..'z';
CHAR_RANGE_UPPER: 'A'..'Z';
NUMBER_RANGE: '0'..'9';